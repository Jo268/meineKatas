package com.company;

public class Fibonacci {
    /***
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
     * By starting with 1 and 2, the first 10 terms will be:
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
     * find the sum of the even-valued terms.
     */
    public double[] berechneFibonacciZahlen(int menge) {
        double[] fibonacciReihe = new double[menge];
        if (menge > 33) {
            System.out.println("Zahl ist zu gro√ü! Bitte eine andere Zahl: ");
        } else {
            fibonacciReihe[0] = 1;
            fibonacciReihe[1] = 2;
            for (int i = 2; i < menge; i++) {
                fibonacciReihe[i] = fibonacciReihe[i - 1] + fibonacciReihe[i - 2];
            }
            for (int i = 0; i < fibonacciReihe.length; i++) {
            }
        }
        return fibonacciReihe;
    }

    public double berechneFibonacciRekursiv(double stelle) {
            if (stelle == 1 || stelle == 2) return 1;
            else return berechneFibonacciRekursiv(stelle - 1) + berechneFibonacciRekursiv(stelle - 2);
    }

    public double summeDerGradenFibs(double[] fibonacciArray) {
        double ergebnis = 0;
        for (int i = 0; i < fibonacciArray.length; i++) {
            if (fibonacciArray[i] % 2 == 0) {
                ergebnis = ergebnis + fibonacciArray[i];
            }
        }
        return ergebnis;
    }
}